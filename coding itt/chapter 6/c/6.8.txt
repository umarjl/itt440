#include <sys/socket.h>
#include <sys/types.h>
#include <arpa/inet.h>
#include <unistd.h>
#include <stdio.h>

#define MAX(x, y)       ((x > y) ? x : y)

main()
{
  int s1, s2, s3, ret, max, on;
  struct sockaddr_in sa1, sa2;
  fd_set rfds;

  s1 = socket( AF_INET, SOCK_STREAM, 0 );
  s2 = socket( AF_INET, SOCK_STREAM, 0 );

  max = MAX(s1, s2) + 1;

  on = 1;
  ret = setsockopt( s1, SOL_SOCKET, SO_REUSEADDR,
                     &on, sizeof(on) );
  ret = setsockopt( s2, SOL_SOCKET, SO_REUSEADDR,
                     &on, sizeof(on) );

  memset( &sa1, 0, sizeof(sa1) );
  memset( &sa2, 0, sizeof(sa2) );

  /* Set up the two address structures for the same */
  /* port, different interfaces */
  sa1.sin_family = sa2.sin_family = AF_INET;
  sa1.sin_port = sa2.sin_port = htons(8192);
  sa1.sin_addr.s_addr = inet_addr( "192.168.1.1" );
  sa2.sin_addr.s_addr = inet_addr( "10.0.0.1" );

  /* Bind address1 to s1 */
  ret = bind( s1, (struct sockaddr *)&sa1, sizeof(sa1) );
  ret = listen(s1, 5);

  /* Bind address2 to s2 */
  ret = bind( s2, (struct sockaddr *)&sa2, sizeof(sa2) );
  ret = listen(s2, 5);

  while (1) {

    /* Set up the read socket descriptor list */
    FD_ZERO( &rfds );
    FD_SET( s1, &rfds );
    FD_SET( s2, &rfds );

    /* Await an incoming connection */
    ret = select( max, &rfds, NULL, NULL, NULL );

    /* Check that a read (connect) arrived */
    if (ret > 0) {

      /* Was it socket1? */
      if ( FD_ISSET( s1, &rfds ) ) {

        printf("Received connect request over 192.168.1.1\n");

        s3 = accept( s1, (struct sockaddr_in *)NULL, NULL);
        close( s3 );

      /* Was it socket2? */
      } else if ( FD_ISSET( s2, &rfds ) ) {

        printf("Received connect request over 10.0.0.1\n");

        s3 = accept( s2, (struct sockaddr_in *)NULL, NULL);
        close( s3 );

      }

    } else {

      printf("Error!\n");

    }

  }

  close(s1); close(s2);
}